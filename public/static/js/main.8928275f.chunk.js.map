{"version":3,"sources":["types/types.js","actions/notification.js","components/notification/Notification.js","components/notification/NotificationProvider.js","components/helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/Login.js","components/auth/Register.js","components/auth/LoginScreen.js","components/helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","components/helpers/customStyles.js","actions/ui.js","components/modal/ModalContent.js","components/modal/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoutes.js","router/PublicRoutes.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/notificationReducers.js","reducers/uiReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["types","addNotification","id","message","type","payload","Notification","useState","exit","setExit","width","setWidth","intervalID","setIntervalID","finalTypes","setFinalTypes","dispatch","useDispatch","handleStartTimer","idInt","setInterval","prev","clearInterval","handlePauseTimer","useCallback","handleCloseNotification","setTimeout","removeNotification","useEffect","onMouseEnter","onMouseLeave","className","style","NotificationProvider","notifications","useSelector","state","notification","map","note","baseURL","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","catch","err","console","log","helperAction","res","dispath","a","json","uid","nameRes","name","ok","msg","setItem","Date","getTime","login","v4","checkingFinish","user","logout","useForm","initialState","values","setvalues","reset","handleInputChange","target","value","Login","Email","Password","formValues","handleInputChanges","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","isFormValid","validator","isEmail","trim","length","onSubmit","e","email","password","preventDefault","placeholder","onChange","Register","Name","Password1","Password2","isNameValid","setisNameValid","setisEmailValid","isPassword1Valid","setisPassword1Valid","isPassword2Valid","setisPassword2Valid","noValidate","LoginScreen","margin","prepareEvents","events","end","moment","toDate","start","eventAddNew","event","eventUpdated","eventDeleted","eventLoader","resetActiveEvent","Navbar","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","openModal","CloseModal","startDate","minute","second","add","initForm","notes","ModalContent","activeEvent","calendar","isDateValid","setIsDateValid","isTitleValid","setIsTitleValid","setFormValues","evento","momentStart","momentEnd","isSameOrAfter","_id","getState","format","amPmAriaLabel","minDate","autoComplete","rows","Modal","setAppElement","CalendarModal","modalOpen","ui","isOpen","closeTimeoutMS","onRequestClose","overlayClassName","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","myeventList","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","backgroundColor","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","eventSetAcive","onView","view","PrivateRoutes","isAuthenticated","Component","component","rest","props","to","PublicRoutes","AppRouter","chekcing","exact","path","checking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","el","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8928275f.chunk.js","sourcesContent":["export const types = {\r\n    //Notifications\r\n    addNotification: 'ADD_NOTIFICATION',\r\n    removeNotification: 'REMOVE_NOTIFICATION',\r\n\r\n    //UI modal\r\n    openModal: '[UI] Open modal',\r\n    closeModal: '[UI] Close modal',\r\n\r\n    //Calendar event\r\n\r\n    eventSetActive: '[event] SetActive',\r\n    eventStartNew: '[event] Start new',\r\n    eventAddnew: '[event] Add new',\r\n    eventUpdated: '[event] Updated',\r\n    eventDeleted: '[event] Deleted',\r\n    eventLoader: '[event] Loader',\r\n    eventsReset: '[event] Reset',\r\n    eventsResetActiveEvent: '[event] Reset active event',\r\n\r\n\r\n\r\n    //Auth\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n\r\n\r\n\r\n    \r\n    //Type of message notification\r\n    success: 'SUCCESS',\r\n    error: 'ERROR',\r\n    loading: 'LOADING'\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const addNotification = (id, message, type) => {\r\n    return {\r\n        type: types.addNotification,\r\n        payload: {\r\n            id: id,\r\n            message: message,\r\n            type: type\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeNotification = (id) => {\r\n    return {\r\n        type: types.removeNotification,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeNotification } from \"../../actions/notification\";\r\n\r\nconst Notification = ({ id, type, message }) => {\r\n  const [exit, setExit] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const [intervalID, setIntervalID] = useState(null);\r\n  const [finalTypes, setFinalTypes] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleStartTimer = () => {\r\n    const idInt = setInterval(() => {\r\n      setWidth(prev => {\r\n        if (prev < 100) {\r\n          return prev + 0.5;\r\n        }\r\n\r\n        clearInterval(idInt);\r\n        return prev;\r\n      });\r\n    }, 20);\r\n\r\n    setIntervalID(idInt);\r\n  };\r\n\r\n  const handlePauseTimer = useCallback(\r\n    () => {\r\n      clearInterval(intervalID);\r\n    },\r\n    [intervalID],\r\n  )\r\n\r\n  const handleCloseNotification = useCallback(\r\n    () => {\r\n      handlePauseTimer();\r\n      setExit(true);\r\n      setTimeout(() => {\r\n        dispatch(removeNotification(id))\r\n      }, 1100)\r\n    },\r\n    [dispatch, handlePauseTimer, id],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (width === 100) {\r\n      // Close notification\r\n      handleCloseNotification()\r\n    }\r\n  }, [width, handleCloseNotification])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    handleStartTimer();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (type === 'SUCCESS') setFinalTypes('success')\r\n    else if (type === 'ERROR') setFinalTypes('error')\r\n    else if (type === 'LOADING') setFinalTypes('loading')\r\n  }, [type])\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div\r\n      onMouseEnter={handlePauseTimer}\r\n      onMouseLeave={handleStartTimer}\r\n      className=\r\n      {\r\n        `notification-item \r\n            ${finalTypes}\r\n            ${exit ? \"exit\" : \"\"}\r\n            `\r\n      }\r\n    >\r\n      <p>{message}</p>\r\n\r\n      <div className={\"bar\"} style={{ width: `${width}%` }} />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Notification from './Notification'\r\n\r\nimport '../../styles/styles.css'\r\n\r\nexport const NotificationProvider = () => {\r\n\r\n    const notifications = useSelector(state => state.notification)\r\n\r\n    return (\r\n        <div>\r\n            <div className={'notification-wrapper'}>\r\n                {\r\n                    notifications.map(note => {\r\n                        return <Notification key= { note.id } {...note} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","const baseURL = process.env.REACT_APP_API_URL\r\n\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`\r\n    // localhost:4000/api/endopoint\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch(url)\r\n    }\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify( data )\r\n    })\r\n\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseURL}/${endpoint}`\r\n    // localhost:4000/api/endopoint\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        }).catch((err)  => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'x-token': token\r\n        },\r\n        body: JSON.stringify( data )\r\n    })\r\n\r\n}","import { v4 } from \"uuid\"\r\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { addNotification } from \"./notification\"\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispath) => {\r\n        \r\n        const res = await fetchSinToken('auth', { email, password }, 'POST')\r\n        dispath(helperAction(res))\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispath ) => {\r\n        const res = await fetchSinToken('auth/new', {name, email, password}, 'POST')\r\n        dispath(helperAction(res))\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispath) => {\r\n        const res = await fetchConToken('auth/renew')\r\n        const { uid, name: nameRes, ok, token } = await res.json()\r\n        if( ok ) {\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('token-initial-date', new Date().getTime())\r\n            dispath( login({uid, nameRes}) )\r\n        } else {\r\n            dispath(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst helperAction = ( res ) => {\r\n    return async( dispath ) => {\r\n        //const res = await fetchSinToken('auth/new', {name, email, password}, 'POST')\r\n        const { uid, name: nameRes, ok, token, msg } = await res.json()\r\n        \r\n        if( ok ) {\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('token-initial-date', new Date().getTime())\r\n            dispath( login({uid, nameRes}) )\r\n            dispath( addNotification(v4(), 'Has entrado correctamente', types.success) )\r\n        } else {\r\n            dispath( addNotification(v4(), msg, types.error) )\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n    return {\r\n        type: types.authCheckingFinish\r\n    }\r\n}\r\n\r\nconst login = ( user ) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return ( dispath ) => {\r\n        localStorage.clear()\r\n        dispath(logout())\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.authLogout\r\n    }\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setvalues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n        setvalues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value \r\n        })\r\n    }\r\n\r\n\r\n    return [values, handleInputChange, reset]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { v4 } from 'uuid'\r\nimport validator  from 'validator'\r\n\r\nimport { startLogin } from '../../actions/auth'\r\nimport { addNotification } from '../../actions/notification'\r\n\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { types } from '../../types/types'\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formValues, handleInputChanges ] \r\n    = useForm({\r\n        Email: 'ismael@gmail.com',\r\n        Password: '123456'\r\n    })\r\n\r\n    const { Email, Password } = formValues\r\n\r\n    const [isEmailValid, setIsEmailValid] = useState(true)\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true)\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        \r\n        e.preventDefault()\r\n\r\n        if( isFormValid() ){\r\n            dispatch(startLogin(Email, Password))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if (!validator.isEmail(Email)) {\r\n            dispatch(addNotification(v4(), 'Invalid login email', types.error))\r\n            setIsEmailValid(false)           \r\n            return false\r\n        } \r\n        setIsEmailValid(true)\r\n        if (Password.trim().length <= 5){\r\n            dispatch(addNotification(v4(), 'Login password should be at leat 6 characters', types.error))\r\n            setIsPasswordValid(false)\r\n            return false\r\n        }\r\n        setIsPasswordValid(true)\r\n        \r\n        \r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLoginSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className={`form-control ${!isEmailValid ? 'invalid' : '' } `}\r\n                                placeholder=\"Correo\"\r\n                                name=\"Email\"\r\n                                value= { Email }\r\n                                onChange={ handleInputChanges }\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={`form-control ${ !isPasswordValid ? 'invalid' : '' } `}\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"Password\"\r\n                                value={ Password }\r\n                                onChange={ handleInputChanges }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { v4 } from 'uuid'\r\nimport validator from 'validator'\r\nimport { startRegister } from '../../actions/auth'\r\n\r\nimport { addNotification } from '../../actions/notification'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { types } from '../../types/types'\r\n\r\nexport const Register = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formValues, handleInputChanges ] \r\n    = useForm({\r\n        Name: 'Ismael',\r\n        Email: 'ismael2@gmail.com',\r\n        Password1: '123456',\r\n        Password2: '123456'\r\n    })\r\n\r\n    const {\r\n        Name,\r\n        Email,\r\n        Password1,\r\n        Password2\r\n    } = formValues\r\n\r\n    const [isNameValid, setisNameValid] = useState(true)\r\n    const [isEmailValid, setisEmailValid] = useState(true)\r\n    const [isPassword1Valid, setisPassword1Valid] = useState(true)\r\n    const [isPassword2Valid, setisPassword2Valid] = useState(true)\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( isFormValid() ){\r\n            dispatch(startRegister(Email, Password1, Name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (Name.trim() === ''){\r\n            dispatch(addNotification(v4(), 'El nombre es obligatoria', types.error))\r\n            setisNameValid(false)\r\n            return false\r\n        }\r\n        setisNameValid(true)\r\n        if (!validator.isEmail(Email)) {\r\n            dispatch(addNotification(v4(), 'El correo electrónico del registro no es valido', types.error))\r\n            setisEmailValid(false)           \r\n            return false\r\n        } \r\n        setisEmailValid(true)\r\n        if (Password1.trim().length <= 5){\r\n            dispatch(addNotification(v4(), 'La contraseña del registro debe de tener al menos 6 caracteres', types.error))\r\n            setisPassword1Valid(false)\r\n            return false\r\n        }\r\n        if (Password1.trim() !== Password2.trim()) {\r\n            dispatch(addNotification(v4(), 'La contraseñas de registro deben de ser iguales', types.error))\r\n            setisPassword1Valid(false)\r\n            return false\r\n        }\r\n        setisPassword1Valid(true)\r\n        if (Password2.trim().length <= 5){\r\n            dispatch(addNotification(v4(), 'La segunda contraseña del registro debe de tener al menos 6 caracteres', types.error))\r\n            setisPassword2Valid(false)\r\n            return false\r\n        }\r\n        setisPassword2Valid(true)\r\n        \r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-6 login-form-2\">\r\n            <h3>Registro</h3>\r\n            <form \r\n                onSubmit={ handleSubmit }\r\n                noValidate\r\n            >\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!isNameValid ? 'invalid' : '' } `}\r\n                        placeholder=\"Nombre\"\r\n                        name='Name'\r\n                        value={ Name }\r\n                        onChange= { handleInputChanges }\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`form-control ${!isEmailValid ? 'invalid' : '' } `}\r\n                        placeholder=\"Correo\"\r\n                        name='Email'\r\n                        value={ Email }\r\n                        onChange= { handleInputChanges }\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className={`form-control ${!isPassword1Valid ? 'invalid' : '' } `}\r\n                        placeholder=\"Contraseña\"\r\n                        name='Password1'\r\n                        value={ Password1 }\r\n                        onChange= { handleInputChanges }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className={`form-control ${!isPassword2Valid ? 'invalid' : '' } `}\r\n                        placeholder=\"Repita la contras\"\r\n                        name=\"Password2\"\r\n                        value={ Password2 }\r\n                        onChange= { handleInputChanges }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btnSubmit\"\r\n                        value=\"Crear cuenta\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Login } from './Login'\r\n\r\n\r\nimport './login.css'\r\nimport { Register } from './Register'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\" style={{margin: '9% 0'}}>\r\n                <Login />\r\n                <Register />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    \r\n    \r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }))\r\n}\r\n","import { v4 } from \"uuid\"\r\n\r\nimport { fetchConToken } from \"../components/helpers/fetch\"\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\nimport { addNotification } from \"./notification\"\r\n\r\n\r\n\r\nexport const eventStartNew = ( event ) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, nameRes: name } = getState().auth\r\n        console.log(getState().auth)\r\n\r\n        try {\r\n            const res = await fetchConToken('events', event, 'POST')\r\n        \r\n            const { ok, evento } = await res.json()\r\n            if( ok ) {\r\n                event._id = evento._id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                \r\n                dispatch( eventAddNew(event) )\r\n                dispatch( addNotification(v4(), 'Evento agregado correctamente', types.success) )\r\n            }\r\n        } catch {\r\n            dispatch( addNotification(v4(), 'Ha habido un error inesperado', types.error) )\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => {\r\n    return {\r\n        type: types.eventAddnew,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventSetAcive = (event) => {\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventStartUpdate = ( evento ) => {\r\n    return async(dispatch) => {\r\n        console.log(evento)\r\n        try {\r\n            const res = await fetchConToken(`events/${evento._id}`, evento, 'PUT')\r\n            const { ok, msg } = await res.json()\r\n            \r\n            if(!ok) {\r\n                dispatch(addNotification(v4(), msg, types.error))\r\n                return\r\n            }\r\n            dispatch(eventUpdated(evento))\r\n            dispatch(addNotification(v4(), 'Evento actualizado', types.success))\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventUpdated = (event) => {\r\n    \r\n    return {\r\n        type: types.eventUpdated,\r\n        payload: event\r\n        \r\n    }\r\n}\r\n\r\nexport const eventStartdeleted = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const res = await fetchConToken(`events/${event._id}`, {}, 'DELETE')\r\n            const { ok, msg } = await res.json()\r\n            \r\n            if(!ok) {\r\n                dispatch(addNotification(v4(), msg, types.error))\r\n                return\r\n            }\r\n            dispatch(eventDeleted(event))\r\n            dispatch(addNotification(v4(), 'Evento eliminado', types.success))\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = (event) => {\r\n    \r\n    return {\r\n        type: types.eventDeleted,\r\n        payload: event\r\n        \r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const res = await fetchConToken('events')\r\n            const { ok, eventos } = await res.json()\r\n            \r\n            const events = prepareEvents(eventos)\r\n            //console.log(events)\r\n            \r\n            if(ok) {\r\n            dispatch(eventLoader(events))\r\n            }\r\n        } catch {\r\n            dispatch(addNotification(v4(), 'Ha habido un error inesperado al cargar todos los eventos del calendario', types.error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLoader = ( events ) => {\r\n    return {\r\n        type: types.eventLoader,\r\n        payload: events\r\n    }\r\n}\r\n\r\nexport const resetEventsOnLogOut = () => {\r\n    return {\r\n        type: types.eventsReset\r\n    }\r\n}\r\n\r\nexport const resetActiveEvent = () => {\r\n    return {\r\n        type: types.eventsResetActiveEvent\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { resetEventsOnLogOut } from '../../actions/events'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { nameRes } = useSelector(state => state.auth)\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout())\r\n        dispatch(resetEventsOnLogOut())\r\n    }\r\n\r\n    return (\r\n        <nav className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                { nameRes }\r\n            </span>\r\n\r\n            <button\r\n                onClick={handleLogOut} \r\n                className='btn btn-outline-danger'\r\n            >\r\n                <span> <i className='fas fa-sign-out-alt' /> Salir</span>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <span>{ title }</span>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}","export const customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};","import { types } from \"../types/types\"\r\n\r\nexport const openModal = () => {\r\n    return{\r\n        type: types.openModal\r\n    }\r\n}\r\n\r\nexport const CloseModal = () => {\r\n    return{\r\n        type: types.closeModal\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNotification } from '../../actions/notification';\r\nimport { v4 } from 'uuid';\r\nimport { types } from '../../types/types';\r\nimport { eventStartNew, eventStartUpdate, resetActiveEvent } from '../../actions/events';\r\nimport { CloseModal } from '../../actions/ui';\r\n\r\nconst startDate = moment().minute(0).second(0).add(1, 'hours')\r\n\r\nconst initForm = {\r\n    title: '',\r\n    notes: '',\r\n    start: startDate.toDate(),\r\n    end: startDate.add(1, 'hour').toDate()\r\n}\r\n\r\nexport const ModalContent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [isDateValid, setIsDateValid] = useState(true)\r\n\r\n    const [isTitleValid, setIsTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initForm)\r\n\r\n    const { title, notes, start, end } = formValues\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if( momentStart.isSameOrAfter(momentEnd) ){\r\n            setIsDateValid(false)\r\n            dispatch( addNotification(v4(), 'La fecha fin debe de ser mayor a la fecha de inicio', types.error) )\r\n            return\r\n        }\r\n        setIsDateValid(true)\r\n\r\n        if( title.trim().length < 2 ) {\r\n            setIsTitleValid(false)\r\n            dispatch( addNotification(v4(), 'El titulo debe de ser del al menos 2 caracteres', types.error) )\r\n            return\r\n        }        \r\n        setIsTitleValid(true)\r\n\r\n        if( activeEvent ) {\r\n            dispatch(eventStartUpdate(formValues))\r\n            //console.log(formValues)\r\n            //dispatch( addNotification(v4(), 'Evento actualizado correctamente', types.success) )\r\n        }else {\r\n            dispatch(eventStartNew(formValues))\r\n        }\r\n\r\n        \r\n        dispatch( CloseModal() )\r\n        dispatch(resetActiveEvent())\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> { activeEvent ? 'Editar evento' : 'Nuevo evento'}  </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmit }\r\n                noValidate   \r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className={`form-control ${!isDateValid && 'invalid'}`}\r\n                        format=\"y-MM-dd h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"  \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        className='form-control'\r\n                        format=\"y-MM-dd h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        minDate={start}\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!isTitleValid && 'invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className='form-control'\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport './calendarModal.css'\r\n\r\nimport { customStyles } from '../helpers/customStyles'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ModalContent } from './ModalContent';\r\nimport { CloseModal } from '../../actions/ui'\r\nimport { resetActiveEvent } from '../../actions/events';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n\r\n    const closeModal = () => {\r\n        dispatch(CloseModal())\r\n        dispatch(resetActiveEvent())\r\n    }\r\n\r\n    return (\r\n        \r\n            <Modal\r\n                isOpen={modalOpen}\r\n                //onAfterOpen={afterOpenModal}\r\n                closeTimeoutMS={200}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                className='modal'\r\n                overlayClassName='modal-fondo'\r\n            >\r\n                <ModalContent />\r\n            </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch(openModal())\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='btn btn-primary fab'\r\n            onClick={ handleOpenModal }\r\n        >\r\n            <i className={ activeEvent ? 'fas fa-edit' : 'fas fa-plus'} />\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  eventStartdeleted } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const handleDeleteEvent = () => {\r\n        dispatch(eventStartdeleted(activeEvent))\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='btn btn-danger fab-danger'\r\n            onClick={ handleDeleteEvent }\r\n        >\r\n            <i className='fas fa-trash' />\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../helpers/calendar-messages-es'\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from '../modal/CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openModal } from '../../actions/ui'\r\nimport { eventSetAcive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\n\r\nmoment.locale('es')\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const { events:myeventList, activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    console.log()\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (event) => {\r\n        dispatch(openModal())\r\n        \r\n    }\r\n\r\n    const onSelected = (event) => {\r\n        dispatch(eventSetAcive(event))\r\n    }\r\n\r\n    const onViewChange = (event) => {\r\n        localStorage.setItem('lastView', event)\r\n        setLastView(event)\r\n    }\r\n\r\n\r\n    const eventStyleGetter = () => {\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={myeventList}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={onSelected}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                \r\n            />\r\n\r\n            <CalendarModal />\r\n            {\r\n                \r\n            }\r\n            <AddNewFab />\r\n            {\r\n                activeEvent &&\r\n                <DeleteEventFab />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                ? ( <Component { ...props } /> )\r\n                : (<Redirect to='/login' />)     \r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoutes.propTypes = {\r\n    isAuthenticated:    PropTypes.bool.isRequired,\r\n    component:    PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) =>(\r\n                (!isAuthenticated)\r\n                ? ( <Component { ...props } /> )\r\n                : (<Redirect to='/' />)     \r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated:    PropTypes.bool.isRequired,\r\n    component:          PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoutes } from './PrivateRoutes';\r\nimport { PublicRoutes } from './PublicRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { chekcing, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if( chekcing ) {\r\n        return <h1>Espere...</h1>\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <Router>\r\n\r\n            <Switch>\r\n                <PrivateRoutes isAuthenticated={!!uid} exact path='/' component={CalendarScreen} />\r\n                <PublicRoutes isAuthenticated={!!uid} exact path='/login' component={LoginScreen} />\r\n                { /*<Route exact path='/' component={CalendarScreen} /> */}\r\n                {/* <Route exact path='/login' component={LoginScreen} /> */}\r\n                <Redirect to='/' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            console.log('logout')\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"," import { types } from \"../types/types\";\r\n\r\n/*\r\n\r\n    {\r\n        id: v4() ,\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        notes: 'comprar papel',\r\n        user: {\r\n            _id: '1234',\r\n            name: 'Ismael'\r\n        }\r\n    }\r\n\r\n*/\r\n\r\nconst initialState = {\r\n    events:\r\n    [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        \r\n        case types.eventAddnew: \r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload,\r\n                ]\r\n            }\r\n        case types.eventSetActive: \r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload \r\n            }\r\n        case types.eventUpdated: \r\n            return {\r\n                ...state,\r\n                events: state.events.map(event => (event._id === action.payload._id) ? action.payload : event) //evento es igual a\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(e => e._id !== state.activeEvent._id),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoader:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventsReset: \r\n            return {\r\n                ...initialState\r\n            }\r\n        \r\n        case types.eventsResetActiveEvent: \r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = []\r\n\r\nexport const notificationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.addNotification:\r\n            return [\r\n                ...state,\r\n                {\r\n                    ...action.payload    \r\n                }\r\n            ]\r\n        \r\n            case types.removeNotification:\r\n                return state.filter( el => el.id !== action.payload.id)\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.openModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.closeModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { calendarReducer } from \"../reducers/calendarReducer\";\r\nimport { notificationReducer } from \"../reducers/notificationReducers\";\r\nimport { uiReducer } from \"../reducers/uiReducers\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    notification: notificationReducer,\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { NotificationProvider } from './components/notification/NotificationProvider'\r\n\r\n\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={ store } >\r\n                <NotificationProvider />\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles/styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}